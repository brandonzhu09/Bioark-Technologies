# Generated by Django 5.0.7 on 2024-08-27 00:01

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0015_designlibrary'),
    ]

    operations = [
        migrations.CreateModel(
            name='StructureType',
            fields=[
                ('structure_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('structure_type_symbol', models.CharField(unique=True)),
                ('structure_type_name', models.CharField(unique=True)),
            ],
            options={
                'db_table': 'structure_types',
            },
        ),
        migrations.RemoveConstraint(
            model_name='promoterspecialcase',
            name='not_both_null',
        ),
        migrations.RenameField(
            model_name='bacterialmarkerspecialcase',
            old_name='delivery_type_symbol',
            new_name='structure_type_symbol',
        ),
        migrations.RenameField(
            model_name='deliverylibrary',
            old_name='delivery_type_name',
            new_name='structure_type_name',
        ),
        migrations.RenameField(
            model_name='deliverylibrary',
            old_name='delivery_type_symbol',
            new_name='structure_type_symbol',
        ),
        migrations.RenameField(
            model_name='product',
            old_name='delivery_type_code',
            new_name='structure_type_code',
        ),
        migrations.RenameField(
            model_name='promoterspecialcase',
            old_name='delivery_type_symbol',
            new_name='structure_type_symbol',
        ),
        migrations.AlterField(
            model_name='deliveryformat',
            name='delivery_format_name',
            field=models.CharField(unique=True),
        ),
        migrations.AlterField(
            model_name='deliveryformat',
            name='delivery_format_symbol',
            field=models.CharField(unique=True),
        ),
        migrations.AddConstraint(
            model_name='promoterspecialcase',
            constraint=models.CheckConstraint(check=models.Q(('function_type_symbol__isnull', False), ('structure_type_symbol__isnull', False), _connector='OR'), name='not_both_null'),
        ),
    ]
